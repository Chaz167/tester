/**************************** LOT LABEL POPULATION ****************************/
/* There are two cases to handle:                                             */
/*   (a) When a Context is newly created.                                     */
/*   (b) When a Context has been loaded.                                      */
/*                                                                            */
/* Case (a) is handled by on-click events which trigger                       */
/* `populateLotLabelGeneral()`.                                               */
/*                                                                            */
/* Case (b) is handled by a callback to `showTabGroup`. This is implemented   */
/* by overwriting the auto-generated function `loadContextFrom` using         */
/* @POSTPROC.                                                                 */
/******************************************************************************/
addOnEvent("Context", "show", "populateLotLabelGeneral()");

CONTEXT_IDENTIFIER_REFS = new ArrayList();

CONTEXT_IDENTIFIER_REFS.add("Context/General/Site");
CONTEXT_IDENTIFIER_REFS.add("Context/General/Area");
CONTEXT_IDENTIFIER_REFS.add("Context/General/Square");
CONTEXT_IDENTIFIER_REFS.add("Context/General/Subsquare");
CONTEXT_IDENTIFIER_REFS.add("Context/General/Context");
CONTEXT_IDENTIFIER_REFS.add("Context/General/LOT_ID");

for (ref : CONTEXT_IDENTIFIER_REFS) {
  String onFocus = "";
  String onBlur  = "populateLotLabelGeneral()";

  onFocus(ref, onFocus, onBlur);
}

populateLotLabelGeneral() {
  String lotRef = "Context/General/Lot_Label";
  populateLotLabel(lotRef);
}

loadContextFrom(String uuid) {
  String tabgroup = "Context";
  setUuid(tabgroup, uuid);
  if (isNull(uuid)) return;

  FetchCallback cb = new FetchCallback() {
    onFetch(result) {
      populateLotLabelGeneral();
    }
  };
  showTabGroup(tabgroup, uuid, cb);
}
