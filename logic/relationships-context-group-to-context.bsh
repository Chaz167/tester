/******************************* RELATIONSHIPS ********************************/
/* Context Group to Context relationships.                                    */
/*                                                                            */
/* Appropriated from PAZC.                                                    */
/******************************************************************************/
addOnEvent("Context_Group/Context_Group_Contexts", "show", "populateContextGroupContextsArea();populateContextGroupRelatedContexts();");
addOnEvent("Context_Group/Context_Group_Contexts/Populate_Target_Context", "delayclick", "populateWebViewHtml(\"Context_Group/Context_Group_Contexts/Selected_Entity\", WEB_REL_NONE); populateContextGroup();");
addOnEvent("Context_Group/Context_Group_Contexts/Add_Context_to_Group"    , "delayclick" , "addToContextGroup()");
addOnEvent("Context_Group/Context_Group_Contexts/Load_Context"   , "click" , "loadContextFromContextGroup()");
addOnEvent("Context_Group/Context_Group_Contexts/Remove_Context_from_Group" , "click" , "removeFromContextGroup()");
addOnEvent("Context_Group/Context_Group_Contexts/Contexts_in_Group" , "click" , "selectAssociatedEntityContextGroup()");

String selectedEntityUuid      = null;
String selectedEntityIdentifer = null;

selectAssociatedEntityContextGroup() {
    selectedEntityUuid      = getListItemValue().split(SEP)[0];
    selectedEntityIdentifer = getListItemValue().split(SEP)[1];
    populateWebViewHtml("Context_Group/Context_Group_Contexts/Selected_Entity", selectedEntityIdentifer);
}

populateContextGroupContextsArea() {
    populateSquare("Context_Group/Context_Group_Contexts/Square");
    populateWebViewHtml("Context_Group/Context_Group_Contexts/Selected_Entity", WEB_REL_NONE);
    selectedEntityUuid      = null;
    selectedEntityIdentifer = null;
}

populateContextGroupRelatedContexts(){
    String contextGroupQuery="SELECT childuuid, response "+
                            "  FROM parentchild JOIN latestNonDeletedArchEntFormattedIdentifiers on (childuuid = uuid) "+
                            "  JOIN createdmodifiedatby USING (uuid) "+
                            " WHERE relationshipid in (SELECT relationshipid  "+
                             "                            FROM latestnondeletedrelationship JOIN relntype USING (relntypeid)  "+
                             "                           WHERE relntypename = 'Context Group - Context') "+
                            "   and parentuuid = '"+getUuid("Context_Group")+"' "+
                            "   and parentaenttypename = 'Context Group' "+
                            " ORDER BY CAST(response as integer) "+
                            " limit ? offset ? ;";
    populateCursorList(
                "Context_Group/Context_Group_Contexts/Contexts_in_Group",
                contextGroupQuery,
                25
        );

    Log.d("foo", contextGroupQuery);
    refreshTabgroupCSS("Context_Group");

}

addToContextGroup() {
    if (isNull(getUuid("Context_Group"))) {
        showToast("You must have saved your entity.");
        return;
    }
    String selectedContextID = getFieldValue("Context_Group/Context_Group_Contexts/Add_Additional_Context");
    if (isNull(selectedContextID)) {
      return;
    }
    String relSaveCallback = "populateContextGroup();populateContextGroupRelatedContexts();";
    saveEntitiesToRel("Context Group - Context", selectedContextID, getUuid("Context_Group"), relSaveCallback);    
}

onContextGroupSaved(){
    if(!isNull(setUuid("Context"))) {
        saveEntitiesToRel("Context Group - Context", setUuid("Context"), getUuid("Context_Group"));
    }
}

populateContextGroup() {
    String targetContextSquare = getFieldValue("Context_Group/Context_Group_Contexts/Square");

    String targetContextQuery = "";
    targetContextQuery += " SELECT uuid || char(0) || response, response ";
    targetContextQuery += "   FROM latestnondeletedarchentformattedidentifiers ";
    targetContextQuery += "  WHERE uuid IN (SELECT uuid ";
    targetContextQuery += "                             FROM latestnondeletedaentvalue  ";
    targetContextQuery += "                             JOIN attributekey USING (attributeid) ";
    targetContextQuery += "                            WHERE attributename = 'Square' ";
    targetContextQuery += "                              AND measure = '%s') ";
    targetContextQuery += " ORDER BY CAST(response as integer);";
    targetContextQuery  = replaceFirst(targetContextQuery, "%s", targetContextSquare);

    fetchAll(
        targetContextQuery,
        new FetchCallback() {
            onFetch(result) {
                print(result);
                populateDropDown("Context_Group/Context_Group_Contexts/Add_Additional_Context", result);
            }
        }
    );
}

removeFromContextGroup() {
  String childuuid = selectedEntityUuid;
  if (!isNull(childuuid)){
    String relationshipidQuery = "select relationshipid from parentchild where parentuuid = '"+getUuid("Context_Group")+"' and childuuid = '"+childuuid+"';";
    fetchOne(relationshipidQuery, new FetchCallback() {
      onFetch(result) {
        String deletequery = "insert into aentreln (uuid, relationshipid, deleted, participatesverb, userid) SELECT uuid, relationshipid, 'true', participatesverb, '"+userid+"' FROM latestnondeletedaentreln WHERE relationshipid = '"+result.get(0)+"';";
        fetchOne(deletequery, null);
        deleteRel(result.get(0));
        populateWebViewHtml("Context_Group/Context_Group_Contexts/Selected_Entity", WEB_REL_NONE);
        selectedEntityUuid = null;
        selectedEntityIdentifer = null;
        populateContextGroupRelatedContexts();
      }
    });        
  } else {
    showWarning("Nothing Selected", "Please select a child entity in the list.");
  }
}

loadContextFromContextGroup(){
    String childuuid = selectedEntityUuid;
    if (!isNull(childuuid)){
        loadEntityFrom(childuuid);
    } else {
        showWarning("Nothing Selected", "Please select a child entity in the list.");
    }
}
